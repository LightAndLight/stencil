{-# language OverloadedStrings #-}
{-# language OverloadedLists #-}
{-# language QuasiQuotes #-}
import Stencil

import Data.Monoid
import System.Exit
import Text.Trifecta

cabalFile =
  [template|
-- Initial ${package-name}.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                ${package-name}
version:             ${version}
-- synopsis:
-- description:
license:             ${license}
license-file:        LICENSE
author:              ${author-name}
maintainer:          ${author-email}
-- copyright:
-- category:
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  -- exposed-modules:
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.9 && <4.10
  -- hs-source-dirs:
  default-language:    Haskell2010
|]

shellNix =
  [template|
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc821" }:

let

  inherit (nixpkgs) pkgs;

  haskellPackages = if compiler == "default"
                       then pkgs.haskellPackages
                       else pkgs.haskell.packages.\${compiler};

  drv = import ./default.nix { inherit nixpkgs compiler; };

in

  if pkgs.lib.inNixShell then drv.env else drv
|]

defaultNix =
  [template|
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc821" }:

let

  inherit (nixpkgs) pkgs;

  f = import ./${package-name}.nix;

  haskellPackages = if compiler == "default"
                       then pkgs.haskellPackages
                       else pkgs.haskell.packages.\${compiler};

  drv = haskellPackages.callPackage f {};

in

  drv
|]

main = do
  runSteps $ do
    name <- prompt "package-name" "Package Name" Nothing Nothing
    prompt "version" "Version" Nothing (Just "0.1.0.0")
    prompt
      "license"
      "License"
      (Just
        [ "GPL-2"
        , "GPL-3"
        , "LGPL-2.1"
        , "LGPL-3"
        , "BSD2"
        , "BSD3"
        , "MIT"
        , "ISC"
        , "MPL-2.0"
        , "Apache-2.0"
        , "PublicDomain"
        , "AllRightsReserved"
        ])
      (Just "BSD3")
    prompt "author-name" "Author Name" Nothing Nothing
    prompt "author-email" "Author Email" Nothing Nothing
    fillTemplate cabalFile >>= createFile (name <> ".cabal")
    fillTemplate defaultNix >>= createFile "default.nix"
    fillTemplate shellNix >>= createFile "shell.nix"
